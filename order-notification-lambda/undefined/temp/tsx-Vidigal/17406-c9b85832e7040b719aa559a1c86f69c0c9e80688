{"code":"(()=>{\nvar __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var exception_exports={};__export(exception_exports,{CustomError:()=>CustomError,throwCustomError:()=>throwCustomError});module.exports=__toCommonJS(exception_exports);class CustomError extends Error{static{__name(this,\"CustomError\")}statusCode;constructor(message,statusCode){super(message);this.statusCode=statusCode;Object.setPrototypeOf(this,CustomError.prototype)}}const throwCustomError=__name((message,statusCode)=>{switch(statusCode){case 403:throw new CustomError(message||\"Forbidden: You do not have permission to access this resource.\",403);case 404:throw new CustomError(message||\"Not Found: The requested resource could not be found.\",404);case 500:throw new CustomError(message||\"Internal Server Error: An unexpected error occurred on the server.\",500);default:throw new CustomError(message||\"An error occurred.\",statusCode)}},\"throwCustomError\");0&&(module.exports={CustomError,throwCustomError});\n})()\n","warnings":[],"map":{"version":3,"mappings":";suBAAA,wKAAO,MAAM,oBAAoB,KAAM,CAAvC,MAAuC,4BAC5B,WAEP,YAAY,QAAiB,WAAoB,CAC7C,MAAM,OAAO,EACb,KAAK,WAAa,WAElB,OAAO,eAAe,KAAM,YAAY,SAAS,CACrD,CACJ,CAEO,MAAM,iBAAmB,QAAC,QAAiB,aAA8B,CAC5E,OAAQ,WAAY,CAChB,IAAK,KACD,MAAM,IAAI,YAAY,SAAW,iEAAkE,GAAG,EAC1G,IAAK,KACD,MAAM,IAAI,YAAY,SAAW,wDAAyD,GAAG,EACjG,IAAK,KACD,MAAM,IAAI,YAAY,SAAW,qEAAsE,GAAG,EAC9G,QACI,MAAM,IAAI,YAAY,SAAW,qBAAsB,UAAU,CACzE,CACJ,EAXgC","names":[],"ignoreList":[],"sources":["C:\\GITHUB REPOSITORY\\nslt-challenge\\order-notification-lambda\\exception.ts"],"sourcesContent":[null]}}