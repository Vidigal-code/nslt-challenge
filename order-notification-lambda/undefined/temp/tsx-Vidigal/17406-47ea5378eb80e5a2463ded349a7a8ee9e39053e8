{"code":"(()=>{\n\"use strict\";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var handler_exports={};__export(handler_exports,{sendOrderNotification:()=>sendOrderNotification});module.exports=__toCommonJS(handler_exports);var mongoose=__toESM(require(\"mongoose\"));var import_client_sns=require(\"@aws-sdk/client-sns\");var import_order=__toESM(require(\"./order.model\"));var dotenv=__toESM(require(\"dotenv\"));var import_exception=require(\"./exception\");dotenv.config();const snsClient=new import_client_sns.SNSClient({region:process.env.AWS_REGION});const sendOrderNotification=__name(async event=>{return mongoose.connect(process.env.MONGODB_URI).then(()=>{const orderData=JSON.parse(event.body);const order=new import_order.default(orderData);return order.save().then(()=>{const snsParams={Message:`New order created with ID: ${order.id}`,TopicArn:process.env.SNS_TOPIC_ARN};const command=new import_client_sns.PublishCommand(snsParams);return snsClient.send(command).then(()=>{return{statusCode:200,body:JSON.stringify({message:\"Order notification sent successfully!\"})}}).catch(snsError=>{(0,import_exception.throwCustomError)(\"Failed to send SNS notification\",snsError.statusCode)})}).catch(orderSaveError=>{(0,import_exception.throwCustomError)(\"Failed to save the order\",orderSaveError.statusCode)})}).catch(error=>{console.error(\"Error occurred:\",error);(0,import_exception.throwCustomError)(\"Error occurred while connecting to the database\",error.statusCode)})},\"sendOrderNotification\");0&&(module.exports={sendOrderNotification});\n})()\n","warnings":[],"map":{"version":3,"mappings":";8/BAAA,6JAA0B,6BAC1B,sBAA0C,+BAC1C,iBAAkB,kCAClB,WAAwB,2BACxB,qBAAiC,uBAEjC,OAAO,OAAO,EAEd,MAAM,UAAY,IAAI,4BAAU,CAC5B,OAAQ,QAAQ,IAAI,UACxB,CAAC,EAEM,MAAM,sBAAwB,aAAO,OAAe,CAEvD,OAAO,SAAS,QAAQ,QAAQ,IAAI,WAAY,EAC3C,KAAK,IAAM,CACR,MAAM,UAAY,KAAK,MAAM,MAAM,IAAI,EACvC,MAAM,MAAQ,IAAI,aAAAA,QAAM,SAAS,EAEjC,OAAO,MAAM,KAAK,EACb,KAAK,IAAM,CACR,MAAM,UAAY,CACd,QAAS,8BAA8B,MAAM,EAAE,GAC/C,SAAU,QAAQ,IAAI,aAC1B,EAEA,MAAM,QAAU,IAAI,iCAAe,SAAS,EAC5C,OAAO,UAAU,KAAK,OAAO,EACxB,KAAK,IAAM,CACR,MAAO,CACH,WAAY,IACZ,KAAM,KAAK,UAAU,CACjB,QAAS,uCACb,CAAC,CACL,CACJ,CAAC,EACA,MAAO,UAAa,IACjB,mCAAiB,kCAAmC,SAAS,UAAU,CAC3E,CAAC,CACT,CAAC,EACA,MAAO,gBAAmB,IACvB,mCAAiB,2BAA4B,eAAe,UAAU,CAC1E,CAAC,CACT,CAAC,EACA,MAAO,OAAU,CACd,QAAQ,MAAM,kBAAmB,KAAK,KACtC,mCAAiB,kDAAmD,MAAM,UAAU,CACxF,CAAC,CACT,EApCqC","names":["Order"],"ignoreList":[],"sources":["C:\\GITHUB REPOSITORY\\nslt-challenge\\order-notification-lambda\\handler.ts"],"sourcesContent":[null]}}